@model ManageCustomerVM

@if (Model.Results.Count <= 0) 
{
    <partial name="_NoResults" model="@("No results found")" />
} 
else 
{
    <table>
        <thead>
            <tr>
                @foreach (var f in ViewBag.Fields) 
                {
                    var dir = "asc";
                    if (f == Model.Sort)
                    {
                        dir = Model.Dir == "desc" ? "asc" : "desc";
                    }

                    <th class="@Model.Dir @(f == Model.Sort ? "selected" : "")">
                        <a href="@Url.Action("Manage", new {Dir = dir, Sort = f, Page = Model.Page, Search = Model.Search, SearchOption = Model.SearchOption, Statuses = Model.Statuses, CreationFrom = Model.CreationFrom?.ToString(), CreationTo = Model.CreationTo?.ToString()})"
                        data-ajax="true"
                        data-ajax-update="#manage-results">@f</a>
                    </th>
                }
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var c in Model.Results)
            {
                <tr>
                    <td>@c.Id</td>
                    <td>@c.Name</td>
                    <td>@c.Email</td>
                    <td>
                        <div class="status-text-container @c.Status.ToLower()">@c.Status</div>
                    </td>
                    <td>@FormatService.ToDateTimeFormat(c.CreatedAt, "dd MMM yyyy")</td>
                    <td>
                        <div class="button-group-inline">
                            <a href="@Url.Action("Edit", new {id = c.Id})" data-button="yellow">Edit</a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @Html.PagedListPager(Model.Results,
    page => Url.Action("Manage", new {
        Dir = Model.Dir,
        Sort = Model.Sort,
        Page = page,
        Search = Model.Search,
        SearchOption = Model.SearchOption,
        Statuses = Model.Statuses,
        CreationFrom = Model.CreationFrom?.ToString(),
        CreationTo = Model.CreationTo?.ToString()
        }),
        PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(ManagePageService.GetPagedOption(), ManagePageService.GetAjaxOption())
    )
}